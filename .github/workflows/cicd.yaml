name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: <AWS_ACCOUNT_ID>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
  ECR_REPOSITORY_API: my-api-repo
  ECR_REPOSITORY_SERVICE: my-service-repo
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  KUBE_NAMESPACE: default

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::<AWS_ACCOUNT_ID>:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push API Docker image
        run: |
          docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_API }}:latest ./api
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_API }}:latest

      - name: Build and push Service Docker image
        run: |
          docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_SERVICE }}:latest ./services
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_SERVICE }}:latest

  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::<AWS_ACCOUNT_ID>:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ env.KUBE_CONFIG }}" > ~/.kube/config

      - name: Update Kubernetes Deployment
        run: |
          kubectl set image deployment/api-deployment api=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_API }}:latest -n ${{ env.KUBE_NAMESPACE }}
          kubectl set image deployment/service-deployment service=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_SERVICE }}:latest -n ${{ env.KUBE_NAMESPACE }}

      - name: Update ConfigMap
        run: |
          kubectl create configmap api-config --from-literal=version=latest -n ${{ env.KUBE_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
          kubectl create configmap service-config --from-literal=version=latest -n ${{ env.KUBE_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -