name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REPOSITORY_API: douglasg96/kantox-main-api
  KUBE_NAMESPACE: main-api-prod

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin ${{ env.DOCKER_REGISTRY }}

      - name: Build and push API Docker image
        run: |
          docker build -t ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY_API }}:latest .
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY_API }}:latest

      - name: Clone kantox-k8s repository
        run: |
          git clone https://github.com/douglasg96/kantox-k8s.git
          cd main-api
          git config --global user.name "GitHub Actions"
          git config --global user.email "drg96@gmail.com"
  
      - name: Update ConfigMap version
        run: |
          # Extract the current version
          CURRENT_VERSION=$(cat main-api/configmap.yaml | grep MAIN_API_VERSION | awk '{print $2}' | tr -d '"')
          
          # Increment the patch version
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{print $1"."$2"."$3+1}')
          
          # Update the ConfigMap with the new version
          sed -i "s|MAIN_API_VERSION:.*|MAIN_API_VERSION: \"$NEW_VERSION\"|g" main-api/configmap.yaml
          
          # Print the new version for debugging
          echo "Updated MAIN_API_VERSION to $NEW_VERSION"

      - name: Commit and push changes
        run: |
          cd main-api
          git add main-api/configmap.yaml
          git commit -m "Update MAIN_API_VERSION to $NEW_VERSION"
          git push https://${{ secrets.GH_TOKEN }}@github.com/douglasg96/kantox-k8s.git HEAD:main